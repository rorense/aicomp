// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Everytime you generate a new model
// 'npx prisma generate' Add model to local prisma
// 'npx prisma db push' push the model to planet scale

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Category {
  id String @id @default(uuid())
  name String
  companion Companion[]
}

model Companion {
  id String @id @default(uuid())
  userId String
  userName String
  src String
  name String @db.Text
  description String
  instruction String @db.Text
  seed String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String

  messages Message[]

  @@index([categoryId])
  @@fulltext([name])
}

enum Role {
  user
  system
}

model Message {
  id String @id @default(uuid())
  role Role
  content String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companionId String
  userId String

  companion Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)

  @@index([companionId])
}

model UserSubscription {
  id String @id @default(uuid())
  userId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @unique @map(name: "stripe_current_period_end")
}